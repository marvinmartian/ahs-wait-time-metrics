version: "3.9"

networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  app:
    # build: .
    image: marvinmartian/ahs-wait-times
    container_name: ahs
    networks:
      - monitor-net
    expose:
      - 8080
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.scope=ahs"
      - "org.label-schema.group=monitoring"
    # ports:
    #   - "8282:8080"

  prometheus:
    image: prom/prometheus:latest
    container_name: ahs_prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=500d'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      - "com.centurylinklabs.watchtower.scope=ahs"
      - "org.label-schema.group=monitoring"

  grafana:
    image: grafana/grafana:latest
    container_name: ahs_grafana
    volumes:
      - grafana_data:/var/lib/grafana
      # - ./grafana/plugins:/var/lib/grafana/plugins
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_RENDERING_SERVER_URL=http://renderer:8088/render
      - GF_RENDERING_CALLBACK_URL=https://waittimes.omgosh.org/
      - GF_LOG_FILTERS=rendering:debug
    restart: unless-stopped
    ports:
      - "3001:3000"
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      - "com.centurylinklabs.watchtower.scope=ahs"
      - "org.label-schema.group=monitoring"

  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: renderer
    ports:
      - 8088:8088
    volumes:
      - ./renderer-config.json:/usr/src/app/config.json
    networks:
      - monitor-net
    labels:
      - "com.centurylinklabs.watchtower.scope=ahs"
      - "org.label-schema.group=monitoring"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --scope ahs
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
    labels:
      - "com.centurylinklabs.watchtower.scope=ahs"